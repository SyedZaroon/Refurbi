{{ 'swiper-bundle.min.css' | asset_url | stylesheet_tag }}
<script src="{{ 'swiper-bundle.min.js' | asset_url }}" defer></script>

<style>
  .buttons {
    display: flex;
    gap: 10px;
  }
  .drawer-button {
    cursor: pointer;
  }

  .condition-slider {
    margin-top: 16px;
    width: 100%;
    max-width: 650px;
  }

  .swiper-slide {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100% !important;
  }
  .condition-img-box {
    position: relative;
    height: 288px;
  }

  .condition-img-box img {
    max-width: 100%;
    height: auto;
    position: absolute;
  }

  .condition-img-1{
    bottom: 0;
    left: 50%;
    transform: translateX(-50%);
  }

  .condition-img-2{
    top: 0;
    left: 50%;
    transform: translateX(-50%);
  }

  .condition-img-box {
    border-radius: 16px;
  }
  .condition-like-new {
    background-color: #dff7ff;
  }

  .condition-excellent {
    background-color: #fbffee;
  }
  .condition-very-good {
    background-color:#ECECEC;
  }

  .condition-fair{
    background-color:#FFE3E3;
  }
  
  .drawer-condition-buttons-slider {
  overflow-x: auto;
  -webkit-overflow-scrolling: touch;
}

  .drawer-condition-buttons {
    display: flex;
    gap: 8px;
    flex-wrap: nowrap;
    margin-top: 20px;
  }

  .drawer-condition-buttons p {
  flex: 0 0 auto; /* so each tab keeps its size */
  padding: 8px 12px;
  border-radius: 6px;
  background-color: #f5f5f5;
  white-space: nowrap;
}

  .condition-content-box {
    margin-top: 20px;
    display: flex;
    flex-direction: column;
    gap: 15px;
  }

  .condition-battery {
    display: flex;
    flex-wrap: wrap;
    gap: 8px;
    align-items: center;
  }
  .condition-arrow {
    border: 1px solid #000000;
    border-radius: 50%;
    width: 32px;
    height: 32px;
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: white;
  }

  .custom-button-next,
  .custom-button-prev {
    width: fit-content;
    position: absolute;
    top: 50%;
    z-index: 99999;
    right: 20px;
    transform: translateY(-50%);
  }

  .custom-button-prev {
    left: 20px;
    transform: translateY(-50%) rotate(180deg);
  }

  .drawer-condition-buttons .block-swatch.active-tab {
    border: 1px solid #000; /* Example border */
  }
</style>

<cart-drawer
  class="cart-drawer drawer drawer--lg show-close-cursor"
  id="custom-drawer"
  role="dialog"
  aria-modal="true"
  style="left: auto; right: 0px; top: 0px; opacity: 1; visibility: hidden;"
  data-drawer="condition"
>
  <!-- Close button -->
  <button is="close-button" aria-label="Close">
    <svg
      role="presentation"
      stroke-width="2"
      focusable="false"
      width="24"
      height="24"
      class="icon icon-close"
      viewBox="0 0 24 24"
    >
      <path d="M17.658 6.343 6.344 17.657M17.658 17.657 6.344 6.343" stroke="currentColor"></path>
    </svg>
  </button>

  <!-- ðŸ”„ Custom content here -->
  <div class="custom-drawer-content align-self-start">
    <div class="custom-drawer__icon-wrapper">
      <p class="h5">Condition Explain</p>
    </div>

    <div class="swiper condition-slider">
      <div class="swiper-wrapper">
        <div class="swiper-slide condition-likeNew condition-img-box">
          <img src="{{ 'LikeNewOne.png' | asset_img_url: 'medium' }}" alt="Like New Image" width="368" height="">
        </div>
        <div class="swiper-slide condition-img-box condition-likeNew">
          <img src="{{ 'game.png' | asset_img_url: 'medium' }}" alt="Like New Image" width="368" height="">
        </div>
      </div>

      <!-- Navigation buttons (optional) -->
      <div class="custom-button-next">
        <div class="condition-arrow"><img src="{{ 'arrowright.png' | asset_url }}" width="5px" height=""></div>
      </div>

      <div class="custom-button-prev">
        <div class="condition-arrow"><img src="{{ 'arrowright.png' | asset_url }}" width="5px" height=""></div>
      </div>
    </div>

    <div class="drawer-condition-buttons-slider">
    <div class="drawer-condition-buttons">
      <p class="block-swatch " data-target="like-new">Like New</p>
      <p class="block-swatch " data-target="excellent">Excellent</p>
      <p class="block-swatch " data-target="very-good">Very Good</p>
      <p class="block-swatch " data-target="fair">Fair</p>
    </div>
    </div>

    <div class="condition-content-box">
        <div class="condition-battery">
          <img src="{{ 'battery-full.png' | asset_url }}" width="20px" height="10px">
          <p class="condition-battery-health">Battery Health +85%</p>
        </div>
      <p class="condition-desc">
      </p>
    </div>
  </div>
</cart-drawer>


<script>
document.addEventListener('DOMContentLoaded', function () {
  const header = document.querySelector('.shopify-section--header');

  const conditionData = {
    'like-new': {
      slides: [
        { img: "{{ 'LikeNewOne.png' | asset_img_url: 'medium' }}" },
        { img: "{{ 'LikeNewTwo.png' | asset_img_url: 'medium' }}" },
      ],
      battery: 'Battery Health +85%',
      desc: `Like New mobiles present an almost flawless appearance, mirroring devices that have just been manufactured. These phones are in excellent condition, with minimal to no signs of previous use, ensuring they perform at their best. Each device has been thoroughly tested and comes with the latest software updates. You can trust in receiving a nearly perfect product that combines high performance with reliability.`,
    },
    excellent: {
      slides: [
        { img: "{{ 'ExcellentOne.png' | asset_img_url: 'medium' }}" },
        { img: "{{ 'ExcellentTwo.png' | asset_img_url: 'medium' }}" },
      ],
      battery: 'Battery Health +85%',
      desc: `Mobiles in Excellent condition undergo thorough inspection and exhibit only minor signs of previous handling. Each device is rigorously tested to ensure it performs reliably and upholds high standards of quality. These phones offer a superb level of performance and functionality, providing an excellent user experience.`,
    },
    'very-good': {
      slides: [
        { img: "{{ 'VeryGoodOne.png' | asset_img_url: 'medium' }}" },
        { img: "{{ 'VeryGoodTwo.png' | asset_img_url: 'medium' }}" },
      ],
      battery: 'Battery Health +85%',
      desc: `Very Good mobiles feature devices with subtle signs of prior use. While they may show some light wear, these phones are still in excellent condition and have been thoroughly tested to ensure they are fully functional. Offering substantial value, these devices deliver reliable performance and a high-quality experience.`,
    },
    fair: {
      slides: [
        { img: "{{ 'FairOne.png' | asset_img_url: 'medium' }}" },
        { img: "{{ 'FairTwo.png' | asset_img_url: 'medium' }}" },
      ],
      battery: 'Battery Health +85%',
      desc: `Fair mobiles feature devices with subtle signs of prior use. While they may show some light wear, these phones are still in excellent condition and have been thoroughly tested to ensure they are fully functional. Offering substantial value, these devices deliver reliable performance and a high-quality experience.`,
    },
  };

  // âœ… Init Swiper once
  let swiper = new Swiper('.condition-slider', {
    loop: true,
    slidesPerView: 1,
    spaceBetween: 10,
    navigation: {
      nextEl: '.custom-button-next',
      prevEl: '.custom-button-prev',
    },
  });

  // âœ… Function to update condition content
  function updateCondition(type) {
    const data = conditionData[type];
    if (!data) return;

    const wrapper = document.querySelector('.condition-slider .swiper-wrapper');
    wrapper.innerHTML = data.slides
      .map(
        (slide, index) => `
        <div class="swiper-slide condition-img-box condition-${type}">
          <img class="condition-img-${index + 1}" src="${slide.img}" alt="${type}" width="320px">
        </div>
      `
      )
      .join('');

    document.querySelector('.condition-battery-health').textContent = data.battery;
    document.querySelector('.condition-desc').textContent = data.desc;

    swiper.update();

    // Mark active tab
    document.querySelectorAll('.drawer-condition-buttons .block-swatch').forEach(tab => {
      tab.classList.remove('active-tab');
    });
    document
      .querySelector(`.drawer-condition-buttons .block-swatch[data-target="${type}"]`)
      ?.classList.add('active-tab');
  }

  // âœ… Event delegation for condition tab clicks
  document.addEventListener('click', function (event) {
    const tab = event.target.closest('.drawer-condition-buttons .block-swatch');
    if (tab) {
      updateCondition(tab.getAttribute('data-target'));
    }
  });

  // âœ… Drawer open logic
  function openDrawer(drawerType) {
    const drawer = document.querySelector(`cart-drawer[data-drawer="${drawerType}"]`);
    if (!drawer) return;

    const closeBtn = drawer.querySelector("button[aria-label='Close']");
    const overlay = drawer.shadowRoot ? drawer.shadowRoot.querySelector('[part="overlay"]') : null;

    drawer.classList.add('animate', 'open');
    drawer.setAttribute('open', '');
    header.style.zIndex = '-1';

    // ðŸ”¹ Reset to default condition when opening condition drawer
    if (drawerType === 'condition') {
      updateCondition('like-new');
    }

    function closeDrawer() {
      drawer.classList.remove('open', 'animate');
      drawer.removeAttribute('open');
      setTimeout(() => {
        header.style.zIndex = '10';
      }, 300);
    }

    if (closeBtn) closeBtn.onclick = closeDrawer;
    if (overlay) overlay.onclick = closeDrawer;
  }

  // âœ… Button click to open drawer
  document.addEventListener('click', function (event) {
    const btn = event.target.closest('.drawer-button, .detail');
    if (!btn) return;
    openDrawer(btn.getAttribute('data-target'));
  });

  // âœ… Set default on first page load
  updateCondition('like-new');
});
</script>

