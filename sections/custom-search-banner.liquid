<style>

  .search-banner{
    background:#FBFFEE;
    height:509px;
    position:relative;
  }

  .slideshow__slide {
    position: relative;
    width: 100%;
    overflow: hidden;
  }

  .search-banner-box {
    position: absolute;
    top: 150px;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 80%;
    max-width: 600px;
    z-index:2;
    
  }
  .search-input-wrapper {
    position: relative;
  }

  .search-input {
    flex: 1;
    
  }

  .search-icon {
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: 100%;
    padding: 15px 20px;
    border-radius: 50px;
        border: 1px solid black;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    font-size: 16px;
    background-color: white;
  }

  .search-results-dropdown {
    position: absolute;
    top: 100%;
    left: 6%;
    width: 90%;
    background: white;
    border-radius: 0 0 10px 10px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    max-height: 400px;
    overflow-y: auto;
    display: none;
    z-index: 100;
  }

  .search-results-dropdown.active {
    display: block;
  }

  .search-result-item {
    padding: 12px 20px;
    border-bottom: 1px solid #eee;
    display: flex;
    align-items: center;
  }

  .search-result-item:hover {
    background: #f9f9f9;
  }

  .search-result-item img {
    width: 50px;
    height: 50px;
    object-fit: cover;
    margin-right: 15px;
    border-radius: 4px;
  }

  .search-result-item-info {
    flex: 1;
  }

  .search-result-item-title {
    font-weight: 600;
    margin-bottom: 4px;
  }

  .search-result-item-price {
    color: var(--text-color);
    font-size: 14px;
  }

  .no-results {
    padding: 15px 20px;
    text-align: center;
    color: #666;
  }

  .search-input-container input:focus {
    border: 0px;
    outline: #000;
  }

  .search-icon:has(input:focus) svg {
    display: none;
  }

   .search-icon:focus{
    border:0;
  }

  .gradient-box {
    width: 854px;
    height: 854px;
    border-radius: 9999px;
    background: linear-gradient(179.99deg, #e7ff9f 0.01%, rgba(236, 236, 236, 0) 18.06%);
    position: absolute;
    bottom: -663px;
    left: 50%;
    transform: translateX(-50%);
    z-index:1;
  }
  .banner-text{
    text-align:center;
    position:relative;
  }
  .banner-text span{
    color: #C6CBB6;

  }

  .icon-search{
    min-width:22px;
  }
</style>

<!-- Search Input -->

<div class="section section-boxed search-banner " >

  <div class="h1 banner-text " >
    Refurbished. <span>Reliable.</span> Ready.

    <div class="search-banner-box">
  <div class="search-input-container">
    <div class="search-input-wrapper">
      <label>
        <div class=" search-icon ">
          <input
            type="text"
            id="predictive-search-input"
            placeholder="Search for products"
            autocomplete="off"
            aria-label="Search products"
          >
          <svg
            role="presentation"
            stroke-width="2"
            focusable="false"
            width="22"
            height="22"
            class="icon icon-search"
            viewBox="0 0 22 22"
          >
            <circle cx="11" cy="10" r="7" fill="none" stroke="#596066"></circle>
            <path d="m16 15 3 3" stroke="#596066" stroke-linecap="round" stroke-linejoin="round"></path>
          </svg>
        </div>
      </label>
      <div class="search-results-dropdown" id="search-results-dropdown"></div>
    </div>
  </div>
</div>
  </div>



<div class="gradient-box"></div>

</div>


<script>
  document.addEventListener('DOMContentLoaded', function () {
    const input = document.getElementById('predictive-search-input');
    const resultsDropdown = document.getElementById('search-results-dropdown');

    input.addEventListener('input', function () {
      const query = input.value.trim();

      if (query.length < 2) {
        resultsDropdown.innerHTML = '';
        resultsDropdown.classList.remove('active');
        return;
      }

      fetch(`/search/suggest.json?q=${encodeURIComponent(query)}&resources[type]=product`)
        .then((response) => response.json())
        .then((data) => {
          const products = data.resources.results.products;

          if (!products || products.length === 0) {
            resultsDropdown.innerHTML = '<div class="no-results">No products found</div>';
          } else {
            resultsDropdown.innerHTML = products
              .map(
                (product) => `
            <a href="${product.url}" class="search-result-item">
              <img src="${product.image}" alt="${product.title}" />
              <div class="search-result-item-info">
                <div class="search-result-item-title">${product.title}</div>
                ${product.price ? `<div class="search-result-item-price">From ${product.price}</div>` : ''}
              </div>
            </a>
          `
              )
              .join('');
          }

          resultsDropdown.classList.add('active');
        })
        .catch((err) => {
          console.error('Predictive search fetch failed:', err);
          resultsDropdown.innerHTML = '<div class="no-results">Error loading results</div>';
          resultsDropdown.classList.add('active');
        });
    });

    document.addEventListener('click', function (e) {
      if (!e.target.closest('.search-input-wrapper')) {
        resultsDropdown.classList.remove('active');
      }
    });
  });
</script>

{% schema %}
{
  "name": "Search Banner",
  "settings": [],
  "presets": [
    {
      "name": "Search Banner"
    }
  ]
}
{% endschema %}
